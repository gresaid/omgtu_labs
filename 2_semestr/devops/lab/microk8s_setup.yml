---


- name: Install and configure MicroK8s on master node
  hosts: master
  become: yes

  tasks:
    - name: Update apt cache
      apt:
        update_cache: yes
        cache_valid_time: 3600

    - name: Install required packages
      apt:
        name:
          - snapd
        state: present

    - name: Install MicroK8s via snap
      snap:
        name: microk8s
        classic: yes
        state: present

    - name: Wait for MicroK8s to start
      shell: microk8s status --wait-ready
      changed_when: false
      timeout: 180

    - name: Add current user to microk8s group
      user:
        name: "{{ ansible_user }}"
        groups: microk8s
        append: yes

    - name: Enable required MicroK8s addons
      shell: microk8s enable dns dashboard
      changed_when: true

    - name: Create .kube directory
      file:
        path: /home/{{ ansible_user }}/.kube
        state: directory
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"
        mode: "0755"

    - name: Get kubeconfig
      shell: microk8s config
      register: kubeconfig_output
      changed_when: false

    - name: Write kubeconfig to file
      copy:
        content: "{{ kubeconfig_output.stdout }}"
        dest: /home/{{ ansible_user }}/.kube/config
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"
        mode: "0600"

- name: Install and configure MicroK8s on worker node
  hosts: worker
  become: yes

  tasks:
    - name: Update apt cache
      apt:
        update_cache: yes
        cache_valid_time: 3600

    - name: Install required packages
      apt:
        name:
          - snapd
        state: present

    - name: Install MicroK8s via snap
      snap:
        name: microk8s
        classic: yes
        state: present

    - name: Wait for MicroK8s to start
      shell: microk8s status --wait-ready
      changed_when: false
      timeout: 180

    - name: Add current user to microk8s group
      user:
        name: "{{ ansible_user }}"
        groups: microk8s
        append: yes

- name: Get join command from master
  hosts: master
  become: yes

  tasks:
    - name: Generate join command
      shell: microk8s add-node
      register: add_node_output
      changed_when: false

    - name: Set join command as fact
      set_fact:
        join_command: "{{ add_node_output.stdout_lines[1] }}"

    - name: Debug join command
      debug:
        var: join_command

# - name: Join worker to cluster
#   hosts: worker
#   become: yes

#   tasks:
#     - name: Join worker to cluster
#       shell: "{{ hostvars[groups['master'][0]].join_command }}"
#       register: join_output
#       failed_when: "'already known to dqlite' not in join_output.stderr and join_output.rc != 0"
#       changed_when: "'already known to dqlite' not in join_output.stderr"
