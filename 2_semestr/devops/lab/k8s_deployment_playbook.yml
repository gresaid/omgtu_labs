---

- name: Deploy applications to Kubernetes
  hosts: master
  become: yes
  gather_facts: yes

  vars:
    namespace: ansible

  tasks:
    # Создание namespace через kubectl
    - name: Create Kubernetes namespace
      shell: microk8s kubectl create namespace {{ namespace }} --dry-run=client -o yaml | microk8s kubectl apply -f -
      register: namespace_result
      changed_when: "'created' in namespace_result.stdout or 'configured' in namespace_result.stdout"
      failed_when: namespace_result.rc != 0 and 'already exists' not in namespace_result.stderr

    # Создание файлов манифестов для приложения 1
    - name: Create temporary directory for manifests
      file:
        path: /tmp/k8s-manifests
        state: directory
        mode: '0755'

    - name: Create deployment manifest for Application 1
      copy:
        dest: /tmp/k8s-manifests/app1-deployment.yaml
        content: |
          apiVersion: apps/v1
          kind: Deployment
          metadata:
            name: test-deployment
            namespace: {{ namespace }}
          spec:
            replicas: 3
            selector:
              matchLabels:
                app: test-pod
            template:
              metadata:
                labels:
                  app: test-pod
              spec:
                containers:
                - name: python-http-server
                  image: python:2.7
                  command: ["/bin/bash"]
                  args: ["-c", "echo \" Hello from $(hostname)\" > index.html; python -m SimpleHTTPServer 80"]
                  ports:
                  - name: http
                    containerPort: 80

    - name: Apply deployment for Application 1
      shell: microk8s kubectl apply -f /tmp/k8s-manifests/app1-deployment.yaml
      register: deploy_app1_result
      changed_when: "'created' in deploy_app1_result.stdout or 'configured' in deploy_app1_result.stdout"

    - name: Create service manifest for Application 1
      copy:
        dest: /tmp/k8s-manifests/app1-service.yaml
        content: |
          apiVersion: v1
          kind: Service
          metadata:
            name: test-service
            namespace: {{ namespace }}
          spec:
            selector:
              app: test-pod
            ports:
            - name: http
              port: 80
              targetPort: 80
            type: ClusterIP

    - name: Apply service for Application 1
      shell: microk8s kubectl apply -f /tmp/k8s-manifests/app1-service.yaml
      register: service_app1_result
      changed_when: "'created' in service_app1_result.stdout or 'configured' in service_app1_result.stdout"

    # Создание файлов манифестов для приложения 2
    - name: Create deployment manifest for Application 2
      copy:
        dest: /tmp/k8s-manifests/app2-deployment.yaml
        content: |
          apiVersion: apps/v1
          kind: Deployment
          metadata:
            name: nginx-hello-deployment
            namespace: {{ namespace }}
          spec:
            replicas: 2
            selector:
              matchLabels:
                app: nginx-hello
            template:
              metadata:
                labels:
                  app: nginx-hello
              spec:
                containers:
                - name: nginx-hello
                  image: nginxdemos/hello:latest
                  ports:
                  - name: http
                    containerPort: 80

    - name: Apply deployment for Application 2
      shell: microk8s kubectl apply -f /tmp/k8s-manifests/app2-deployment.yaml
      register: deploy_app2_result
      changed_when: "'created' in deploy_app2_result.stdout or 'configured' in deploy_app2_result.stdout"

    - name: Create service manifest for Application 2
      copy:
        dest: /tmp/k8s-manifests/app2-service.yaml
        content: |
          apiVersion: v1
          kind: Service
          metadata:
            name: nginx-hello-service
            namespace: {{ namespace }}
          spec:
            selector:
              app: nginx-hello
            ports:
            - name: http
              port: 80
              targetPort: 80
            type: ClusterIP

    - name: Apply service for Application 2
      shell: microk8s kubectl apply -f /tmp/k8s-manifests/app2-service.yaml
      register: service_app2_result
      changed_when: "'created' in service_app2_result.stdout or 'configured' in service_app2_result.stdout"

    # Проверка статуса развертывания
    - name: Check deployment status
      shell: microk8s kubectl get all -n {{ namespace }}
      register: deployment_status
      changed_when: false

    - name: Show deployment status
      debug:
        var: deployment_status.stdout_lines
